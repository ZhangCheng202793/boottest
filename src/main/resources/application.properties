#服务端口
server.port = 8088

# 数据库访问配置
#使用ali的druid监控数据库
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#数据库连接配置
spring.datasource.url=jdbc:oracle:thin:@192.168.11.78:1521/ntttest
spring.datasource.username = nttschcash
spring.datasource.password = bitservice
spring.datasource.driverClassName = oracle.jdbc.driver.OracleDriver

spring.jpa.database=ORACLE
spring.jpa.show-sql=false
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=55
spring.datasource.maxActive=500

#是否自动回收超时连接
spring.datasource.removeAbandoned= true
#超时时间(以秒数为单位)
spring.datasource.removeAbandonedTimeout= 120
#是否在自动回收超时连接的时候打印连接的超时错误
spring.datasource.logAbandoned= true

# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;
druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
spring.datasource.sql-script-encoding: utf-8

#代表在执行检查时，通过statement设置，statement.setQueryTimeout(validationQueryTimeout)
spring.datasource.validateQueryTimeout= 1
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#设置的Evict线程的时间，单位ms，大于0才会开启evict检查线程
#spring.datasource.timeBetweenEvictionRunsMillis=30000
#代表每次检查链接的数量，建议设置和maxActive一样大，这样每次可以有效检查所有的链接.
spring.datasource.numTestsPerEvictionRun=20



spring.jmx.default-domain=boottest

server.contextPath = /boottest/
#Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=utf-8
# Enable http encoding support.
spring.http.encoding.enabled=true
#解决页面显示的中文乱码
spring.http.encoding.force=true